<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Akshit&#39;s Blog (⌐■_■)</title>
    <link>https://exitflynn.github.io/blog/posts/</link>
    <description>Akshit&#39;s Blog (⌐■_■) (Posts)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 12 Aug 2023 05:33:30 +0000</lastBuildDate>
    
    <atom:link href="https://exitflynn.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docs and Marty and the Moving Around of Code and Tests</title>
      <link>https://exitflynn.github.io/blog/posts/gsoc-sixth/</link>
      <pubDate>Sat, 12 Aug 2023 05:33:30 +0000</pubDate>
      
      <guid>https://exitflynn.github.io/blog/posts/gsoc-sixth/</guid>
      <description>&lt;p&gt;Since the last post, I worked on the moving-the-code task. Me, Nabil and Alasdair got on a call to discuss what should go where and I ended up creating a &lt;code&gt;scraper_utils.py&lt;/code&gt; file to complement the &lt;code&gt;scraper.py&lt;/code&gt; file. The other options were moving the functions to &lt;code&gt;.util.net&lt;/code&gt; or inside the &lt;code&gt;scraper.py&lt;/code&gt; file but outside the &lt;code&gt;Scraper&lt;/code&gt; class. After I moved the tests as well, I wrote new tests, increased test coverage and renamed some functions which were previously named in the JavaScript-style CamelCase.
I also added and extended doc-strings to some functions which could use some updating and made fixes as asked in Code-Reviews.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Across the Summer of Code</title>
      <link>https://exitflynn.github.io/blog/posts/gsoc-fifth/</link>
      <pubDate>Sat, 29 Jul 2023 05:33:30 +0000</pubDate>
      
      <guid>https://exitflynn.github.io/blog/posts/gsoc-fifth/</guid>
      <description>&lt;p&gt;I spent the most part of my time since last blog-post working on the failing tests.
The most complex client to fix and the most complex client in general, the GOES Client, needed to be changed a bit. The problem that arose there was mainly because of how we earlier had the liberty of parsing out any variable given down in the pattern since that string would never be used to act as a url but since we also want it to do the job of the baseurl, we can&amp;rsquo;t have any to-be-determined value in the base parts. Since the client involved calling a helper function that returned the data for specific values of those variables, I had to modify the code to obtain those values from that part instead of extracting it again from the URL (since we put it there in the URL string in the first place).
Another issue was implementing a system for dealing with cases where there&amp;rsquo;s no numerical representation for the month in the file&amp;rsquo;s URL, i.e. in the &lt;code&gt;%B&lt;/code&gt; or &lt;code&gt;%b&lt;/code&gt; datetime formats cases.
Aside from that, I added tests to cover the newer parts of the codebase that I added.
I also added documentation about writing the new patterns.&lt;/p&gt;
&lt;p&gt;I made changes as per the PR reviews and now, finally, with all tests (remote or otherwise) passing, and the documentation updated, the scraper rewrite draft PR is ready for review!&lt;/p&gt;
&lt;p&gt;I had a meeting with Nabil to discuss what I have to get done where I also showed him one of my fav pasttime activities, browsing open cameras using Shodan and also discussed about some general career advice.&lt;/p&gt;
&lt;p&gt;While everyone has a look at the changes, Nabil guided me about moving on to &amp;ldquo;moving-the-code&amp;rdquo; part of the project now, which I&amp;rsquo;ll be doing by branching off from my current branch, the scraper rewrite one, and then making a PR to it since it builds on top of those changes and it&amp;rsquo;ll take a while and some reviews for it to merge into main. This way the mentors can review the PR and suggest changes while I work on it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Wild Wild Tests</title>
      <link>https://exitflynn.github.io/blog/posts/gsoc-post-the-fourth/</link>
      <pubDate>Fri, 14 Jul 2023 05:33:30 +0000</pubDate>
      
      <guid>https://exitflynn.github.io/blog/posts/gsoc-post-the-fourth/</guid>
      <description>&lt;h1 id=&#34;fool-proofing-the-rewrite&#34; &gt;Fool-Proofing the Rewrite
&lt;span&gt;
    &lt;a href=&#34;#fool-proofing-the-rewrite&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;After the last post, I mostly kept working on fixing the other failing tests and rewriting the tests to go with the newer pattern.&lt;/p&gt;
&lt;h1 id=&#34;not-all-failing-tests-are-built-same&#34; &gt;Not All Failing Tests are Built Same
&lt;span&gt;
    &lt;a href=&#34;#not-all-failing-tests-are-built-same&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;I managed to take care of them in a couple of days, except the &lt;code&gt;sunpy/net/tests/test_scraper.py::testFilesRange_sameDirectory_local&lt;/code&gt; which proved to be a tough one to figure out. After discussing it a bit, I was able to figure it out, the error was caused because of a very unique flow of things which I think would be interesting to mention. I found out the test was failing because in the &lt;code&gt;_localfilelist()&lt;/code&gt; function, we update the pattern class variable, call different functions on it and then fix it back at the end. Though once I realised this, I was able to spot that I needed to update the second pattern as well in a similar way and I discussed different approaches to do this with the mentors but the flow in the function was a very fun and intuitive way to do things that stood out to me for reason and I just wanted to make a note of it to look back on :P.&lt;/p&gt;
&lt;p&gt;I also discussed my doubt relating to trying to shorten parse patterns by avoiding repetitions somehow but we came to the conclusion that we don&amp;rsquo;t really need to do that, if a pattern has repetitions in it then the user&amp;rsquo;s got to repeat stuff!&lt;/p&gt;
&lt;h1 id=&#34;was-that-it&#34; &gt;Was that it?
&lt;span&gt;
    &lt;a href=&#34;#was-that-it&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;Now once all the scraper tests were passing, I thought the PR should be ready for review. I informed my mentors for the same. The PR received some suggestions, which I discussed and implemented according to the code review.&lt;/p&gt;
&lt;h1 id=&#34;the-plot-twist&#34; &gt;The Plot Twist
&lt;span&gt;
    &lt;a href=&#34;#the-plot-twist&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;For a few days, I remained under the impression that I had mostly rewritten the Scraper in a way that it works and only have to wait for suggestions from the code review. Nabil, Alasdair and I discussed that in the meanwhile I could look into which functions I can remove and move out of the Scraper. However, a plot twist unlike any other was still awaiting me and the realisation came when Nabil asked me if I had run the remote-tests yet. I had been running the &lt;code&gt;test-scraper.py&lt;/code&gt; tests so far, even the remote ones so my response was a vehement yes. When he mentioned that some were still failing, I remembered I was still to fix the examples in the documentation and once I had fixed the doctests it&amp;rsquo;d be passing. However at this point I was beginning to see the &lt;em&gt;real&lt;/em&gt; issue, so far I had only been fixing the tests limited to the scraper and NOT the rest of the codebase.&lt;/p&gt;
&lt;h1 id=&#34;a-whole-new-world&#34; &gt;A Whole New World
&lt;span&gt;
    &lt;a href=&#34;#a-whole-new-world&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;I ran the tests to be greeted with very polite &lt;code&gt;105 failing tests&lt;/code&gt;. I informed this to my mentors and have begun working on fixing all the parts of the codebases which indirectly depend on this class. So far I&amp;rsquo;ve been encountering functions that may / may not have possibly gone redundant and am now exploring and considering which reducing functions, or removing them while fixing tests.&lt;/p&gt;
&lt;h1 id=&#34;next-steps&#34; &gt;Next Steps
&lt;span&gt;
    &lt;a href=&#34;#next-steps&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;I&amp;rsquo;ll keep on working on these new tests, while analysing both the scraper and related parts of the codebase outside for functions to rewrite, remove and/or move at the same time.
I also realised we&amp;rsquo;ll be needing new documentation about how to write the new parse-style patterns.&lt;/p&gt;
&lt;p&gt;That is all so far, until next time!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Scraper Things</title>
      <link>https://exitflynn.github.io/blog/posts/gsoc-post-the-third/</link>
      <pubDate>Fri, 30 Jun 2023 01:33:30 +0000</pubDate>
      
      <guid>https://exitflynn.github.io/blog/posts/gsoc-post-the-third/</guid>
      <description>&lt;p&gt;Most of the week was spent rewriting the Scraper functions to go with the new parse-pattern and then looking for edge cases in the new implementations, fixing bugs and updating tests.&lt;/p&gt;
&lt;h1 id=&#34;catching-up&#34; &gt;{{Catching up}}
&lt;span&gt;
    &lt;a href=&#34;#catching-up&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;In the scraper, while trying to merge &lt;code&gt;baseurl&lt;/code&gt; (an strftime formatted pattern i.e.&lt;code&gt; %Y%m&lt;/code&gt; etc) and &lt;code&gt;pattern&lt;/code&gt; (parse formatted pattern i.e. &lt;code&gt;{year:4d}{month:2d}&lt;/code&gt; etc), I faced two choices, we could either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Make the input all parse-style formatted. generate the datetime-compatible string from here wherever it is required, however the problem i was running into here is parse-stuff like &lt;code&gt;{year:2d}&lt;/code&gt; will collide with &lt;code&gt;{instrument}&lt;/code&gt; like placeholders on which we mean to call &lt;code&gt;.format(**kwargs)&lt;/code&gt; on. All the ways I could think of pulling it off included adding a large no. of lines of code in the really early part of &lt;code&gt;__init__()&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make the input all datetime formatted and generate the parse pattern from here. The problem with this is there are edge-cases when sometimes users define variables like &lt;code&gt;{Level:1d}&lt;/code&gt; which we have no way of knowing beforehand. One way to go about this could&amp;rsquo;ve been that we tell the user to define a pattern string in addition to baseurl whenever they have any new variables like that.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We ended up going with the first. My mentor, &lt;a href=&#34;https://github.com/Nabobalis&#34;&gt;Nabil&lt;/a&gt; introduced me to how there&amp;rsquo;s a prevalence of using double-curly brackets in places where we need to escape / use them with single curly brackets, and sure enough, the &lt;code&gt;parse&lt;/code&gt; module supports that. So that took care of the problem there, I was mostly a bit concerned that I&amp;rsquo;ll have to go back to the second way even though I had started with it before pivoting to the first one.&lt;/p&gt;
&lt;h1 id=&#34;communication&#34; &gt;Communication
&lt;span&gt;
    &lt;a href=&#34;#communication&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;Nabil pointed out that we weren&amp;rsquo;t being very good at communicating and that has a negative effect on the project which lead me to change how I was approaching it.&lt;/p&gt;
&lt;p&gt;A lot of times I was debugging things by including print statements here and there, and since my project now involves changing API it had me updating tests and a lot of these times the problem would just be in my understanding on how to convert the patterns and just how the new input should look like. Previously, I would only send a message on the matrix room when I had a question. And most of the times I&amp;rsquo;d still hold out hope for solving something by myself when I have the strength to pick it up later. But it also makes sense because there&amp;rsquo;d be no way to differentiate that from me not doing anything. Also around 75% of the time I&amp;rsquo;ve drafted out questions, I found out an answer along the way. From now on I realise instead of just asking questions, I should think of it as a logging / progress-updating activity first which sounds obvious in hindsight.&lt;/p&gt;
&lt;h1 id=&#34;to-regex-or-not-to-regex&#34; &gt;To regex or not to regex
&lt;span&gt;
    &lt;a href=&#34;#to-regex-or-not-to-regex&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;The next part where I was stuck at was in converting a pattern that involved custom placeholders like &lt;code&gt;{{CAR_ROT:4d}}&lt;/code&gt; or &lt;code&gt;{{:3d}}&lt;/code&gt; to their regex counterparts like  &lt;code&gt;(\d){3}&lt;/code&gt;, &lt;code&gt;(\d){16}&lt;/code&gt; etc without using like a l o t of regex, any less complex method than using a conversion function etc. However, after a quick conversation with the mentors and I realised that I had been mistakenly assuming that strftime required regex patterns. Earlier I thought that regex would no longer be part of the end-user experience but still somehow exist in the codebase but this is when I realised that we can entirely do away with it.&lt;/p&gt;
&lt;h1 id=&#34;rewrite-then-remove-&#34; &gt;Rewrite then Remove? 💀
&lt;span&gt;
    &lt;a href=&#34;#rewrite-then-remove-&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;I also realised that the &lt;code&gt;_extractDateURL()&lt;/code&gt; function was made redundant &lt;em&gt;after&lt;/em&gt; rewriting it since I found out later that it was only called at one place and that part of the code was no longer required thanks to the existence of a parse-pattern. That&amp;rsquo;s a nice message to keep in mind for the future.&lt;/p&gt;
&lt;h1 id=&#34;modern-day-cain&#34; &gt;Modern Day Cain
&lt;span&gt;
    &lt;a href=&#34;#modern-day-cain&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;Another question I encountered was if we could assume that any {year:2d} or %y type 2-digit year xx to be interpreted to be in the 21st century like 20xx or not.&lt;/p&gt;
&lt;h1 id=&#34;issue-found&#34; &gt;Issue found
&lt;span&gt;
    &lt;a href=&#34;#issue-found&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;I also found this bug in the codebase:
In the current &lt;code&gt;scraper._check_timerange()&lt;/code&gt;, it takes the simpler way &lt;code&gt;if&lt;/code&gt; we provide it with an extractor // parse-pattern and a more complex way if we don&amp;rsquo;t, however as it is implemented right now&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sunpy.net.scraper &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Scraper
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sunpy.time &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; TimeRange
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Scraper(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%Y.fits&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;_check_timerange(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2014.fits&amp;#39;&lt;/span&gt;, TimeRange(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2015-01-01&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2015-01-02&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;would return True and it is intended that way in the tests but if we passed it an extractor // parse pattern&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;extractor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{year:4d}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.fits&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;_check_timerange(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2014.fits&amp;#39;&lt;/span&gt;, TimeRange(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2015-01-01&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2015-01-02&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;it&amp;rsquo;d return False.&lt;/p&gt;
&lt;h1 id=&#34;inclusivity-is-important&#34; &gt;Inclusivity is important
&lt;span&gt;
    &lt;a href=&#34;#inclusivity-is-important&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;Failing tests required me to inqure if we want closed-intervals in the package or open, which concluded with closed. I also found other instances in the codebase where we endorse closed intervals.&lt;/p&gt;
&lt;h1 id=&#34;future-steps&#34; &gt;Future steps
&lt;span&gt;
    &lt;a href=&#34;#future-steps&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;Cover why the rest of tests are breaking and fix em.
Ask for review once everything works.
Try to come up with a way to write parse-patterns so as the length remains less by trying to minimize repeated values.
Also fix my Hugo setup before the night -_-&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Into the Summer of Code</title>
      <link>https://exitflynn.github.io/blog/posts/gsoc-post-the-second/</link>
      <pubDate>Sat, 24 Jun 2023 01:33:30 +0000</pubDate>
      
      <guid>https://exitflynn.github.io/blog/posts/gsoc-post-the-second/</guid>
      <description>&lt;p&gt;I had my end-semester exams during the Community Bonding Period and the real-early part of the Coding Period. However, my mentors were super-accomodating.
I spent a few days on plans with friends before bidding goodbye for the summers, travelling home and relaxing a bit.&lt;/p&gt;
&lt;h2 id=&#34;the-talk&#34; &gt;The Talk
&lt;span&gt;
    &lt;a href=&#34;#the-talk&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;This was also the time when IIT BHU reached out to me for a talk as part of a collab between their Astronomy and Open-Source clubs about Astronomy in tech and OSS. This was a  g r e a t  experience! I&amp;rsquo;ve always wanted to improve at public-speaking stuff and to finally pull off a satisfactory talk was a great experience. Also Prayash was a great host.&lt;/p&gt;
&lt;h2 id=&#34;beginning-with-the-project&#34; &gt;Beginning with the Project
&lt;span&gt;
    &lt;a href=&#34;#beginning-with-the-project&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;My mentor, Nabil, had asked me to start by writing tests for the scraper, even if they may not return a -ve)for all the URLs it doesn&amp;rsquo;t support now.
Looking closely though, all the issues were due to limitations of the way regex is implemented for inputting URLs, i.e. since one of the main goals of the project was to remove regex and use parse instead, these tests would have proven to be quite redundant. I asked my mentors and understandably so, Nabil said that he doesn&amp;rsquo;t want me working on code that I might have to remove soon enough and said I can proceed to the rest of the rewrite.&lt;/p&gt;
&lt;p&gt;After that, I began reading up on what Metaclasses, Abstract Base Classes (ABCs), etc are, their advantages and how they can be implemented in python to decide which would be better for the purpose of the project. However, at this point I wasn&amp;rsquo;t really maintaining good communication with my mentors. When they asked me for any updates and then inquired about why I had been reading up on ABCs and such, they clarified that I should be able to improve the scraper without going that route.&lt;/p&gt;
&lt;p&gt;Had to take a couple of days off in between for unavoidable reasons.&lt;/p&gt;
&lt;p&gt;After that I took some calls with my mentors, clarifying details and trying to work things through together as I figured out what I should do next.
All the scraper // dataretriever clients require two strings, &lt;code&gt;baseurl&lt;/code&gt; and &lt;code&gt;pattern&lt;/code&gt; and I figure out a way to merge them somehow.
I looked into just what role the two of them had and found that &lt;code&gt;pattern&lt;/code&gt; was used only to parse data.
For example, When writing scraper clients, we require a baseurl and a pattern, an example from the NOAA Client:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;baseurl &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ftp://ftp.ngdc.noaa.gov/STP/swpc_products/daily_reports/solar_region_summaries/%Y/%m/%Y%m&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;SRS.txt&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{year:4d}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{month:2d}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{year:4d}{month:2d}{day:2d}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;SRS.txt&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Instead of passing both, we should be able to merge them into just one since the pattern string is conveying information that is already available in the baseurl.&lt;/p&gt;
&lt;p&gt;I figured it should be possible to transform &lt;code&gt;baseurl&lt;/code&gt; to &lt;code&gt;pattern&lt;/code&gt; and generate &lt;code&gt;pattern&lt;/code&gt; that way but halfway through I realised that it&amp;rsquo;d not be possible. However we should be able to convert a full &lt;code&gt;pattern&lt;/code&gt; to it&amp;rsquo;s &lt;code&gt;baseurl&lt;/code&gt; formatted counterpart.&lt;/p&gt;
&lt;p&gt;I remember writing out loud what I thought as I approached that problem:&lt;/p&gt;
&lt;h2 id=&#34;rubber-ducky-microblogging&#34; &gt;rubber ducky microblogging?
&lt;span&gt;
    &lt;a href=&#34;#rubber-ducky-microblogging&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;now how do we include this transformation in our code?
we have mainly two places / files of concern.
&lt;code&gt;dataretriever/client.py&lt;/code&gt; and &lt;code&gt;scraper.py&lt;/code&gt;
at this point there are a couple of ways to go about it that come to my mind, all of them would however can be categorised as:
a) include the transformation in dr/client.py
b) include it in scraper.py&lt;/p&gt;
&lt;p&gt;before i get ahead of myself, it&amp;rsquo;s better to arrive at a concrete decision here, if that&amp;rsquo;s possible, to avoid having too much of overhead.&lt;/p&gt;
&lt;p&gt;case a:
pattern transforms in client and is then sent to scraper. this means the scraper still operates on strftime baseurl.
and when we want to call the parse function, instead of sending pattern as we do now, we can just send the original new format&lt;/p&gt;
&lt;p&gt;case b:
pass the new format to scraper. scraper converts it into strftime to use in all of its functions, and&lt;/p&gt;
&lt;p&gt;the second approach makes more sense, yeah.&lt;/p&gt;
&lt;p&gt;NOW
what&amp;rsquo;d be a nice way to incorporate this transform in the scraper file?&lt;/p&gt;
&lt;p&gt;So there have to be Two strings/patterns, throughout this codebase.
the strftime kind and the parse kind.
what we input is the parse kind (since we can convert this to strftime, and the other way around wasn&amp;rsquo;t possible)&lt;/p&gt;
&lt;p&gt;how to incorporate both strings? make them both private members of the Scraper class?&lt;/p&gt;
&lt;p&gt;some functions will be changed as a result of this&lt;/p&gt;
&lt;p&gt;like _URL_followsPattern&lt;/p&gt;
&lt;p&gt;okay so the plan of action is:
go add a transform function, call it in init
we&amp;rsquo;ll have a variable for the time_pattern, update pattern -&amp;gt; time_pattern wherever applicable.
rewrite using parse wherever applicable&lt;/p&gt;
&lt;p&gt;but this would take away from having a standard system and we&amp;rsquo;ll be defining our own set of names to name variables as.&lt;/p&gt;
&lt;p&gt;also a future plan can be to check for redundant functions / moving code.&lt;/p&gt;
&lt;h2 id=&#34;in-conclusion&#34; &gt;in conclusion
&lt;span&gt;
    &lt;a href=&#34;#in-conclusion&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;So as of right now, I&amp;rsquo;ve been working on &lt;a href=&#34;https://github.com/sunpy/sunpy/issues/7073&#34;&gt;#7073&lt;/a&gt; and &lt;a href=&#34;https://github.com/sunpy/sunpy/pull/7077&#34;&gt;PR #7077&lt;/a&gt;, more details on this issue and my proposed solution can be found in the issue description.&lt;/p&gt;
&lt;p&gt;This&amp;rsquo;ll be all for now, will be posting more in the future.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting Selected As A GSoC student at SunPy</title>
      <link>https://exitflynn.github.io/blog/posts/gsoc-acceptance-speech/</link>
      <pubDate>Sun, 21 May 2023 11:58:10 +0000</pubDate>
      
      <guid>https://exitflynn.github.io/blog/posts/gsoc-acceptance-speech/</guid>
      <description>&lt;h1 id=&#34;what-is-the-google-summer-of-code&#34; &gt;What is The Google Summer of Code?
&lt;span&gt;
    &lt;a href=&#34;#what-is-the-google-summer-of-code&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;It is a program by Google for promoting students to contribute to open-source communities.
It is also a  G R E A T  opportunity for us to work on projects with such big impact. I&amp;rsquo;m so glad I came to know about it. I loved that I could get this opportunity to work with people involved in developing software that is used by many.
Now one could argue that that&amp;rsquo;s the opportunity Open-Source provides in general, which is true. It&amp;rsquo;s difficult to admit but I did need that initial push, some motivating factor to &lt;em&gt;truly&lt;/em&gt; make the effort and get my hands wet with contributing to an open-source project. However it&amp;rsquo;s as they say, the beginning&amp;rsquo;s the hardest part and that once you start contributing it becomes so much more easy to keep going. I think they&amp;rsquo;ve done a great job at incentivising Open-Source contributions.&lt;/p&gt;
&lt;h1 id=&#34;choosing-an-org&#34; &gt;Choosing an Org
&lt;span&gt;
    &lt;a href=&#34;#choosing-an-org&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;A lot of Organisations participate in GSoC. I had worked on a couple of #good-first-issues on a few projects before this period and had achieved that level of confidence where the language / tech-stack wasn&amp;rsquo;t the deciding factor for me anymore but it was now the project idea / the community.
I &lt;strong&gt;love&lt;/strong&gt; Astronomy and feel quite strongly about it. I am super-curious about how I can use my skills / to-be skills in tech in the field of Astronomy, some sort of an intersection of the two would actually be one of the most meaningful and enjoyable work I could find for myself.
Naturally, I looked into &lt;strong&gt;OpenAstronomy&lt;/strong&gt; as a GSoC org.
I&amp;rsquo;ve seen a lot of people prioritising those organisations which make for nicer addition to a resume from a product-based tech companies pov and it indeed &lt;em&gt;is&lt;/em&gt; a very smart way to go about it to be honest but I decided that I didn&amp;rsquo;t want to miss this unique opportunity to work on something I had wanted to do since a long time.
Under the sub-orgs for OpenAstronomy, I found &lt;strong&gt;SunPy&lt;/strong&gt;.&lt;/p&gt;
&lt;h1 id=&#34;first-experience-with-sunpy&#34; &gt;First Experience with SunPy
&lt;span&gt;
    &lt;a href=&#34;#first-experience-with-sunpy&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;Now, SunPy is a python library relating to solar physics. Though heliophysics wasn&amp;rsquo;t exactly something that I thought of when thinking of astrophysics or space-stuff, I was &lt;em&gt;really&lt;/em&gt; impressed by how active and supportive the community is. Besides, I found myself interested in the networking side of things more than the solar-physics stuff anyways as for now.&lt;/p&gt;
&lt;p&gt;While first going through the issues I came across one which included &lt;a href=&#34;https://github.com/sunpy/sunpy/issues/6692&#34;&gt;detecting gzipped files from more than just the extension&lt;/a&gt; (via file-signatures / magic-bytes). I love when my familairity with using linux-based systems comes into play during development and I felt the issue to be quite approachable. During the PR Review, I remember going through the documentation for python&amp;rsquo;s &lt;code&gt;gzip&lt;/code&gt; module to verify that it doesn&amp;rsquo;t need to decompress a whole gzipped file and that we could decompress just enough to get the first couple of bits which include the file-signature (since otherwise it&amp;rsquo;d mean way too much overhead for the solution to be practical) and information on that is &lt;em&gt;not&lt;/em&gt; as easily available on the web as I&amp;rsquo;d like.&lt;/p&gt;
&lt;h1 id=&#34;subsequent-experience&#34; &gt;Subsequent Experience
&lt;span&gt;
    &lt;a href=&#34;#subsequent-experience&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;I kept on making code-contributions which I felt approachable for some parts of January and February. And then I got a bit busy due to some health-reasons and college and organsing OSDHack &amp;lsquo;23 (I&amp;rsquo;ll totally write a blog-post on that later, it was such a nice success). I was a bit apprehensive because I was also looking forward to participate in the Google Summer of Code as a SunPy contributor and I didn&amp;rsquo;t want to give off the wrong impression so I wrote a (not)brief text to &lt;a href=&#34;https://github.com/Nabobalis&#34;&gt;Nabil&lt;/a&gt; who was super-supportive. When the proposal submission period came around, it wasn&amp;rsquo;t the most ideal process since I ended up having to make the proposal in the last 2 days. Thankfully again, the community is super responsive and I reached out to both Nabil and &lt;a href=&#34;https://github.com/wtbarnes&#34;&gt;Will&lt;/a&gt; for some feedback on my proposal and they both replied immediately.&lt;/p&gt;
&lt;h1 id=&#34;contributing-to-open-source-is-goated&#34; &gt;Contributing to Open-Source is GOATed
&lt;span&gt;
    &lt;a href=&#34;#contributing-to-open-source-is-goated&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;People in tech / software development should actually be talking about this so much more than they are. Some of the things that come to my mind right now are:&lt;/p&gt;
&lt;h2 id=&#34;its-a-great-way-to-learn-stuff&#34; &gt;It&amp;rsquo;s a great way to learn stuff
&lt;span&gt;
    &lt;a href=&#34;#its-a-great-way-to-learn-stuff&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;One of the main factors why I think people have a hard time contributing is that they think &amp;ldquo;I can&amp;rsquo;t contribute here because I don&amp;rsquo;t know nearly enough tech to do stuff&amp;rdquo;. The thing with being involved in this form of software development is that it gets you used to learning on the fly which is central to software development and doing well in any field, tbh.&lt;/p&gt;
&lt;p&gt;Contributing to big open-source projects helped me gained TREMENDOUS self-confidence. I could look at any issue on any repo now, and never think that it&amp;rsquo;s un-doable. No matter what domain or what language the project is in, it&amp;rsquo;s only a question of how much time it&amp;rsquo;d take to get through the relevant documentation and concepts. This is certainly a long way from &amp;ldquo;I can&amp;rsquo;t do $#!+ in this codebase if my life depended on it, it scares me&amp;rdquo; and I&amp;rsquo;m very much glad I could have this experience.&lt;/p&gt;
&lt;h2 id=&#34;the-best-practices-ever&#34; &gt;The best practices ever
&lt;span&gt;
    &lt;a href=&#34;#the-best-practices-ever&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;You get to learn how to write well-tested, well-documented and maintainable Production-Ready code following the best software development practices.&lt;/p&gt;
&lt;h2 id=&#34;you-get-to-choose-what-you-want-to-work-on&#34; &gt;You get to choose what you &lt;em&gt;want&lt;/em&gt; to work on
&lt;span&gt;
    &lt;a href=&#34;#you-get-to-choose-what-you-want-to-work-on&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;YEP! And most of the communities would love to have you work on it, that&amp;rsquo;s such an exciting thing if you ask me.&lt;/p&gt;
&lt;p&gt;(this post is a bit rough around the edges, I definitely want to add stuff to it but owing to my exams right now I&amp;rsquo;ll get to it at some later point of time, thanks for reading!)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why I like Random Access Memories so much.</title>
      <link>https://exitflynn.github.io/blog/posts/ram/</link>
      <pubDate>Wed, 17 May 2023 11:58:10 +0000</pubDate>
      
      <guid>https://exitflynn.github.io/blog/posts/ram/</guid>
      <description>&lt;p&gt;Why I like Random Access Memories so much.&lt;/p&gt;
&lt;h2 id=&#34;heading&#34; &gt;
&lt;span&gt;
    &lt;a href=&#34;#heading&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h1 id=&#34;before-i-start&#34; &gt;before i start
&lt;span&gt;
    &lt;a href=&#34;#before-i-start&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;you may have seen the length of this post.&lt;/p&gt;
&lt;p&gt;it’s incomplete.&lt;/p&gt;
&lt;p&gt;like as in i’ve just copy-pasted the rough-incomplete-pointers-at-the-end incomplete.&lt;/p&gt;
&lt;p&gt;you may ask why that is, it’s because it’s RAM’s 10th anniversary today which’ll end in exactly 5 mins in my timezone, i want to get this out before that happens.&lt;/p&gt;
&lt;h1 id=&#34;whats-random-access-memories&#34; &gt;what’s random access memories?
&lt;span&gt;
    &lt;a href=&#34;#whats-random-access-memories&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;it’s a p cool album from Daft Punk, it’s very nice. I recommend you listen to it.&lt;/p&gt;
&lt;p&gt;but also not. realistically speaking i doubt you’d like it as much as i do. To most listeners, most of the tracks would be off-putting at the first listen. I have a particular affinity to electronic music, that’s the something that had me coming back to the album. No matter how weird most of it sound, I’d still come back for the pop-oriented Get Lucky or Instant Crush. The way my music taste developed over the years definitely played a part in it too.&lt;/p&gt;
&lt;p&gt;But different people have different things that strike out to them. And who knows, maybe you’re going through the tracks and there’s something you recognise there and connect to.&lt;/p&gt;
&lt;p&gt;What&amp;rsquo;s RAM like?
it’s electronic… well kinda because you see&lt;/p&gt;
&lt;p&gt;it’s also orchestra… well kinda since it’s not your traditional orchestra. You see,&lt;/p&gt;
&lt;p&gt;it’s dance music… but not your avg dance music,&lt;/p&gt;
&lt;p&gt;it’s more soulful… but that still doesn’t cut it.&lt;/p&gt;
&lt;p&gt;it’s all of these things, and more, at once. and it’a perfected to perfection.&lt;/p&gt;
&lt;p&gt;it’s about having fun, having &lt;em&gt;fun&lt;/em&gt; ( ͡° ͜ʖ ͡°) , falling in love, getting your heart-broken, dancing, the essence and the evolution of dance music and the life-story of one of its pioneers, whatever the fuck motherboard is about, contact&lt;/p&gt;
&lt;p&gt;it’s about music, falling in love, falling out of love, having fun, having fun (with a wink), what it is to be human (from the perspective of a robot) and, well, memories.&lt;/p&gt;
&lt;p&gt;if classical music kept adapting with all the sounds and techniques that technology unlocked, RAM would be the Moonlight Sonata of our age.&lt;/p&gt;
&lt;h2 id=&#34;1-give-life-back-to-music&#34; &gt;1. Give Life Back to Music
&lt;span&gt;
    &lt;a href=&#34;#1-give-life-back-to-music&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;One of those tracks which had vocals going for it, but i disliked initially despite that. On my first listen-through i felt that it’s got a wholesome cheery vibe without much depth which I still believe is true, especially since I was coming from the more&lt;/p&gt;
&lt;h2 id=&#34;2-giorgio-by-moroder&#34; &gt;2. Giorgio By Moroder
&lt;span&gt;
    &lt;a href=&#34;#2-giorgio-by-moroder&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Touch gets a lot of attention as &lt;em&gt;the&lt;/em&gt; song but there’s a good reason that a lot of fans may give that title to Giorgio.&lt;/p&gt;
&lt;p&gt;Speaking objectively, it’s easily one of the most unique tracks I’ve ever listened to. Definitely recommend you head over and give it a listen real quick. Perfect example of the song that sounded so &lt;em&gt;weird&lt;/em&gt; on the first listen, I gave up straight away. Couple of months later and it’s easily one of the most heartfelt and innovative and inspiring tracks that I actually love listening to.&lt;/p&gt;
&lt;p&gt;From finding something as too weird to listen to only to have it be one of my favorites later on, listening to Daft Punk has been an adventure alright.&lt;/p&gt;
&lt;h1 id=&#34;pointers&#34; &gt;pointers:
&lt;span&gt;
    &lt;a href=&#34;#pointers&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;touch deserves a blog post on it’s own&lt;/p&gt;
&lt;p&gt;insight into how they write it: they talk in imagery&lt;/p&gt;
&lt;p&gt;i fucking love GLBTM (Studio Outtakes)&lt;/p&gt;
&lt;p&gt;adhd-ish attention to detail&lt;/p&gt;
&lt;p&gt;perfect mixing&lt;/p&gt;
&lt;p&gt;within is so clean&lt;/p&gt;
&lt;p&gt;instant crush and how i’ve had periods of fav tracks&lt;/p&gt;
&lt;p&gt;edm, soul&lt;/p&gt;
&lt;p&gt;giorgio, some say it’s the true spirit of the track, exists in the same album as touch, eras&lt;/p&gt;
&lt;p&gt;touch&lt;/p&gt;
&lt;p&gt;theory of evolution (classical music)&lt;/p&gt;
&lt;p&gt;combine all of music. electronic but you have choir vocals, orchestra, piano, lead human vocals&lt;/p&gt;
&lt;p&gt;it’s the song you try not to bring up because it’s too good. it’s the song you don’t want to mention on your social-fucking-media&lt;/p&gt;
&lt;p&gt;contact. i dont understand it. does represent the future&lt;/p&gt;
&lt;p&gt;you listen to the song you’ve been avoiding and it’ll be on your repeat for the next 3-weeks&lt;/p&gt;
&lt;p&gt;you settle on a favourite until you listen to something else&lt;/p&gt;
&lt;p&gt;proper analysis i won’t do, tbh i’d say things like there are “subtle drops” but i fear the more i do the more it’ll end up sucking, the exp would be ruined&lt;/p&gt;
&lt;p&gt;todd edwards AMA last night&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My OSDHack &#39;23 Experience</title>
      <link>https://exitflynn.github.io/blog/posts/osdhack23/</link>
      <pubDate>Tue, 16 May 2023 10:10:10 +0000</pubDate>
      
      <guid>https://exitflynn.github.io/blog/posts/osdhack23/</guid>
      <description>&lt;p&gt;V good, again.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>march-end</title>
      <link>https://exitflynn.github.io/blog/posts/march-end/</link>
      <pubDate>Mon, 09 Jan 2023 10:10:10 +0000</pubDate>
      
      <guid>https://exitflynn.github.io/blog/posts/march-end/</guid>
      <description>&lt;h1 id=&#34;what-im-doing-these-days&#34; &gt;What I&amp;rsquo;m doing these days.
&lt;span&gt;
    &lt;a href=&#34;#what-im-doing-these-days&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;h2 id=&#34;or-more-accurately-how-watchmen-is-giving-me-an-artificial-crisis&#34; &gt;(or more accurately how Watchmen is giving me an artificial crisis)
&lt;span&gt;
    &lt;a href=&#34;#or-more-accurately-how-watchmen-is-giving-me-an-artificial-crisis&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Been &lt;em&gt;obsessed&lt;/em&gt; with Watchmen. The original Graphic Novel and the show. I feel weird about the show. Almost like it changes my perception and the safe model I had of Watchmen universe until I saw it. Kind of like how everyone felt when they heard about Dr. Manhattan. It&amp;rsquo;s hard to have to decide how I want to think about the phenomenally earth-shatteringly great universe set up by the original Graphic Novel. Whether I want to consider the show canon or not, for despite it&amp;rsquo;s better-than-expected writing and execution, it does fall flat in some areas and even the tiniest bit of imperfection stands out when previously you were having trouble wrapping your head around the perfection of it all.&lt;/p&gt;
&lt;p&gt;I suppose I&amp;rsquo;ll see the show as a different universe all together, where the message of the original comic changes(?) taking the show in consideration.
In fact, I should be grateful to be presented this opportunity to deal with something I&amp;rsquo;ve been avoiding since long.
Why should it matter? Why should including the show in my mental model have any impact on the show? Shouldn&amp;rsquo;t I myself be able to determine whether Dr. Manhattan could have done more? Just how much of an unlikeabe character Rorshach really was?
Well, a) because of the expository nature of some character&amp;rsquo;s nature ofcourse, exposition, almost by definition, is something you can&amp;rsquo;t &amp;ldquo;reason out&amp;rdquo;. I can&amp;rsquo;t say it&amp;rsquo;s out of character for Laurie to become so &amp;ldquo;headstrong&amp;rdquo; and assertive, since like it or not, that&amp;rsquo;s what ends up happening. If it doesn&amp;rsquo;t fit the character model you had in your mind, treat this as new information. Who&amp;rsquo;s to say you knew everything there was to know about these characters? Sure, as far as Laurie&amp;rsquo;s character development is concerned there were definitely signs and possibilities given her mother&amp;rsquo;s personality as she grew up but there&amp;rsquo;s no way to confirm it and believe that everything that happens now I should attribute to the same character in my head. I wouldn&amp;rsquo;t look at Laurie in the comic and think that this is the same character that&amp;rsquo;d go on to become a reckless and cocksure cop. Same way I can&amp;rsquo;t be sure that Manhattan would come back to Earth so soon to fall in love and gladly accept a death like that (though now that I think of it, given Manhattan&amp;rsquo;s consciousness across time, all of these events &lt;em&gt;are&lt;/em&gt; kinda-sorta compatible with the comic).
Which brings me to a point I&amp;rsquo;ve been meaning to just come to for a long period of time, just think of the show as Lindelof&amp;rsquo;s version of Watchmen, as a weird, fucked-up altered universe in the multiverse and think of Alan Moore&amp;rsquo;s version as just that, as the masterpiece it is.
Some questions that Lindelof&amp;rsquo;s alternate version raises &lt;em&gt;do&lt;/em&gt; carry over to Moore&amp;rsquo;s and should apply.&lt;/p&gt;
&lt;p&gt;Also the show&amp;rsquo;s existence breaking my reality overshadowed my utter obsession with the themes and ideas of the original novel. Rorshach, Comedian, Manhattan and Ozymandias. Such thought-provoking writing.&lt;/p&gt;
&lt;p&gt;So yeah, obsessed with Watchmen. Trent Reznor and Atticus Ross&amp;rsquo; soundtrack to Watchmen, and by extension, Soul as well.&lt;/p&gt;
&lt;p&gt;I suppose I shall take a break from Watchmen. I have overdone the thing and soon I&amp;rsquo;ll keep going gaga over a superficial understanding of something that is unrealistic at the end of the day. The ideas explored are pretty good and thought-provoking sure but I&amp;rsquo;m only defiling their effect by placing them on a altar higher than I should.&lt;/p&gt;
&lt;p&gt;They just announced a Scott Pilgrim show.
So there&amp;rsquo;s that.&lt;/p&gt;
&lt;p&gt;Also yeah, GSoC time chal rha hai. Have to write my proposal. Can&amp;rsquo;t seem to haha :skull:. Also T2 ke liye bhi padhna chahiye.&lt;/p&gt;
&lt;p&gt;ALSO I&amp;rsquo;M KINDA TRIPPING BALLS ABOUT PHILOSOPHY AND SHIT TOO.&lt;/p&gt;
&lt;p&gt;Jean-Paul Sartre, Camus, Kant, Nietzsche, Dostoevsky.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mentoring a Project in Kharagpur Winter of Code</title>
      <link>https://exitflynn.github.io/blog/posts/kwoc/</link>
      <pubDate>Mon, 09 Jan 2023 10:10:10 +0000</pubDate>
      
      <guid>https://exitflynn.github.io/blog/posts/kwoc/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The Kharagpur Winter of Code is an annual five week long program where students new or unknown to free and open-source software contribute to coding projects registered in the program by experienced mentors or project owners and gain experience in contributing to open source software.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;All credit to the &lt;a href=&#34;https://ossdevs.com&#34;&gt;JOOS&lt;/a&gt; (JODC and OSDC) folks for introducing me to the program. I liked what the program was about and had my fingers crossed throughout the year, looking forward to participate when the time came. Someone &lt;em&gt;did&lt;/em&gt; post about the program a week prior to its start and sure I was reminded, yes, but since this is endsem exams season, one shall be excused.&lt;/p&gt;
&lt;h2 id=&#34;and-then-one-day&#34; &gt;And then, one day&amp;hellip;
&lt;span&gt;
    &lt;a href=&#34;#and-then-one-day&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Can&amp;rsquo;t blame me for not reminding the exam timeline but the day I&amp;rsquo;m talking about here was (or atleast what should&amp;rsquo;ve been haha :wink:) a day of great stress for someone who&amp;rsquo;s used to putting-off work till the last moment. idk like 3 days before first exam maybe.&lt;/em&gt;
As I sat there in the college library, laptop on, I get a text from &lt;a href=&#34;https://github.com/osBins&#34;&gt;OsBins&lt;/a&gt; if I could quickly put up an Instagram story from OSDC&amp;rsquo;s &lt;a href=&#34;https://www.instagram.com/osdcjiit&#34;&gt;InstaGram account&lt;/a&gt;,
It took an attosecond,
an attosecond for me to register that information and another to realise that &lt;code&gt;winter is here&lt;/code&gt;.
I checked and it was the last day for applying as mentor and I quickly pulled up some of the personal projects I had been working on as of late. DeGrasse was the obvious choice, cleaned the ol&amp;rsquo; fella up a bit. The entire world will be watching him now. Don&amp;rsquo;t want to look too unprofesh, went ahead and registered the Discord bot.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Author&amp;rsquo;s note to self: please start drafting the MVP first, bc details ke chakkar me saari energy shuru ke paras me hi nikal jaati hai&lt;/em&gt;
&lt;em&gt;Future Author&amp;rsquo;s note to self: phew don&amp;rsquo;t worry, it&amp;rsquo;s a good thing to cringe on previous self okay this is good it means you&amp;rsquo;ve um grown now okay&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;kwoc&#34; &gt;KWoC
&lt;span&gt;
    &lt;a href=&#34;#kwoc&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;The experience on the whole was very much fun. Set-up a Discord server for communication. People joined. Discussed about all the features we could implement in the bot (most of which are still to-be implemented), shitposted (&lt;em&gt;on occasion&lt;/em&gt;) and just got to know each other better. This was, by far, the best part of the program for me. I got the chance to interact with people I wouldn&amp;rsquo;t have much reason to do so with and I&amp;rsquo;m extremely glad I did!&lt;/p&gt;
&lt;p&gt;Most contributors weren&amp;rsquo;t as familiar with python and contributing to open-source. Non-Code contributions really helped here with getting a good idea of the whole &lt;code&gt;setting up git -&amp;gt; forking &amp;amp; cloning -&amp;gt; staging, commiting and pushing -&amp;gt; PR&lt;/code&gt; process while also being super-accessible to everyone. The contributors pointed out issues and suggestions they came across as they set-up the project and got familiar with the codebase.  Everyone&amp;rsquo;s exam timelines were a major pain-in-the-uh-&lt;code&gt;bash&lt;/code&gt; but I&amp;rsquo;m extremely proud that everyone was able to make a code contribution as well, however minor.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Experience With Graphic Designing</title>
      <link>https://exitflynn.github.io/blog/posts/gd/</link>
      <pubDate>Thu, 14 Jul 2022 10:59:44 +0000</pubDate>
      
      <guid>https://exitflynn.github.io/blog/posts/gd/</guid>
      <description>&lt;p&gt;Graphic Designers are a bunch of phonies.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DEF CON Delhi was wild</title>
      <link>https://exitflynn.github.io/blog/posts/defcon/</link>
      <pubDate>Thu, 14 Jul 2022 10:37:16 +0000</pubDate>
      
      <guid>https://exitflynn.github.io/blog/posts/defcon/</guid>
      <description></description>
    </item>
    
    <item>
      <title>My OSDHack &#39;22 Experience</title>
      <link>https://exitflynn.github.io/blog/posts/osdhack/</link>
      <pubDate>Thu, 14 Jul 2022 10:10:10 +0000</pubDate>
      
      <guid>https://exitflynn.github.io/blog/posts/osdhack/</guid>
      <description>&lt;p&gt;It was v good.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello There!</title>
      <link>https://exitflynn.github.io/blog/posts/post/</link>
      <pubDate>Thu, 14 Jul 2022 10:00:16 +0000</pubDate>
      
      <guid>https://exitflynn.github.io/blog/posts/post/</guid>
      <description>&lt;p&gt;Welcome to my blog!&lt;/p&gt;
&lt;p&gt;Hope you like it here!&lt;/p&gt;
&lt;h1&gt; lesssgooo &lt;/h1&gt;
</description>
    </item>
    
  </channel>
</rss>
